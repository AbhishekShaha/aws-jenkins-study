<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>50</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.2">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>app_branch_name</name>
          <description></description>
          <defaultValue>1.60</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>framework_branch_name</name>
          <description></description>
          <defaultValue>1.60</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>devops_branch_name</name>
          <description></description>
          <defaultValue>1.60</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>jar_bump_version</name>
          <description>Bump version for jar files, which may change for different release</description>
          <defaultValue>1.60.0-SNAPSHOT</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ssh_server_ip</name>
          <description>ssh ip for the sandbox env. If empty, the default value is 172.17.0.1. That should be fine in most cases</description>
          <defaultValue>172.17.0.1</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>initialize_system</name>
          <description>Whether to flush database on connection</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>enable_elasticsearch_audit</name>
          <description>Whether to enable audit feature in elasticsearch</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>enable_backup</name>
          <description>Whether to enable backup feature at application layer</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>enable_redo</name>
          <description>Whether to enable redo feature at application layer</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>mincomputationpoolsize</name>
          <description>worker pool size</description>
          <defaultValue>32</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ssh_port</name>
          <description></description>
          <defaultValue>6022</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>chef_json</name>
          <description>json attributes for chef client</description>
          <defaultValue>{
 &quot;run_list&quot;: [&quot;recipe[all-in-one]&quot;],
 &quot;common_basic&quot;:{&quot;app_branch_name&quot;:&quot;$app_branch_name&quot;,
       # if framework_branch_name is empty, we will use value of app_branch_name
       &quot;framework_branch_name&quot;:&quot;$framework_branch_name&quot;,
       &quot;devops_branch_name&quot;:&quot;$devops_branch_name&quot;,
       &quot;app_http_port&quot;:&quot;80&quot;,
       &quot;app_https_port&quot;:&quot;443&quot;,
       &quot;app_backup_port&quot;:&quot;8084&quot;,
       &quot;jar_bump_version&quot;:&quot;$jar_bump_version&quot;,
       &quot;mdm_domain_name&quot;:&quot;app.carol.ai&quot;,
       &quot;hack_hosts_file&quot;:&quot;true&quot;,
       &quot;nagios_server&quot;:&quot;&quot;,
       &quot;package_url&quot;:&quot;http://repo.carol.ai:18000&quot;
 },
 &quot;os_basic&quot;:{&quot;enable_firewall&quot;:&quot;false&quot;,
      &quot;force_logrotate&quot;:&quot;true&quot;},
 &quot;all_in_one&quot;:{&quot;enable_audit_elasticsearch&quot;:&quot;$enable_elasticsearch_audit&quot;},
 &quot;couchbase_mdm&quot;:{&quot;memory_quota_mb&quot;:&quot;2048&quot;},
 &quot;elasticsearch_mdm&quot;:{&quot;allocated_memory_mb&quot;:&quot;1536&quot;,
       &quot;audit_allocated_memory_mb&quot;:&quot;1024&quot;
 },
 &quot;app_mdm&quot;:{&quot;skip_mdm_yml_update&quot;:&quot;false&quot;,
        &quot;cb_bucket_retries&quot;:&quot;10&quot;,
        &quot;cb_bucket_retryinterval&quot;:&quot;10000&quot;,
        &quot;cb_bucket_timeout&quot;:&quot;100000&quot;,
        # Google key
        &quot;google_keys&quot;:&quot;&quot;,
        # Use SANDBOX_IP:8086 and SANDBOX_IP:8087 with no need of ssh tunnel
        &quot;mdm_java_opts&quot;:&quot;-Xms1024m -Xmx1024m&quot;,
        &quot;mdmbackup_java_opts&quot;:&quot;-Xms512m -Xmx512m&quot;,
        &quot;enable_route53_configuration&quot;:&quot;true&quot;,
        &quot;enable_slack_sync&quot;:&quot;true&quot;,
        # By default we add all plugins, excluding the ones are specified
        &quot;plugin_exclude_list_regexp&quot;:&quot;mdm-bematech-plugin-.*.jar&quot;,
        &quot;ensure_app_start&quot;:&quot;true&quot;,
        &quot;slack_user&quot;:&quot;\\${HOSTNAME}&quot;,
        &quot;log_slack_token&quot;:&quot;xoxb-100486418085-0dm75CcwARHExvVesBsRqEqX&quot;,
        &quot;log_slack_channel&quot;:&quot;mdm-aio-logs&quot;,
        &quot;cb_replicas_count&quot;:&quot;0&quot;,
        &quot;elasticsearch_replicas_count&quot;:&quot;0&quot;,
        &quot;elasticsearch_shards_count&quot;:&quot;1&quot;,
        &quot;elasticsearch_audit_replicas_count&quot;:&quot;0&quot;,
        &quot;elasticsearch_audit_shards_count&quot;:&quot;1&quot;,
        &quot;mincomputationpoolsize&quot;:&quot;$mincomputationpoolsize&quot;,
        &quot;staging_max_batch_size&quot;:&quot;5MiB&quot;,
        &quot;whether_flushdatabaseonconnect&quot;:&quot;$initialize_system&quot;,
        &quot;whether_populatefakedata&quot;:&quot;false&quot;,
        &quot;whether_populaterealdata&quot;:&quot;false&quot;,
        &quot;whether_populategenerateddata&quot;:&quot;false&quot;,
        # By default we add all plugins, excluding the ones are specified
        &quot;plugin_exclude_list_regexp&quot;:&quot;mdm-bematech-plugin-.*.jar&quot;,
        # AI
        &quot;ai_product_normalization_host&quot;:&quot;45.79.86.59&quot;,
        &quot;ai_product_normalization_rpath&quot;:&quot;/r/productNormalization&quot;,
        # backup
        &quot;backupConfig_backupStagingData&quot;:&quot;$enable_backup&quot;,
        &quot;backupConfig_redoLog&quot;:&quot;$enable_redo&quot;,
        &quot;backupConfig_backupBaseDir&quot;:&quot;../logs/backup&quot;,
        # Note: /etc/hosts may have been changed
        &quot;logback_remotehost&quot;:&quot;backup.carol.ai&quot;,
        # pass to mdm.yml
        &quot;backupConfig_backupServerUrl&quot;:&quot;https://backup.carol.ai:8084/backup/api/v1/plugins/backupServer/&quot;,
        # pass to backupserver.yml
        &quot;backupConfig_mdmUrl&quot;:&quot;https://app.carol.ai:8443/api/v1/&quot;
}}</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>check_status</name>
          <description>Whether to check service status after chef update</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>kill_running_chef_update</name>
          <description>Chef update may hang or stuck on internet requests.

If this option enabled, we will kill existing chef update, before we update sandbox again.</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>0 4 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -ex
export STOP_CONTAINER=false
export START_COMMAND=&quot;&quot;
export POST_START_COMMAND=&quot;mkdir -p /usr/share/elasticsearch; service elasticsearch start; service couchbase-server start; service mdm start; true&quot;
export PRE_STOP_COMMAND=&quot;service mdm stop; service couchbase-server stop; service elasticsearch stop; true&quot;
export git_repo_url=&quot;git@github.com:TOTVS/mdmdevops.git&quot;
export ssh_key_file=&quot;/var/lib/jenkins/ssh_id_rsa&quot;
export code_dir=&quot;/root/chef&quot;
export CODE_SH=&quot;/root/git_update.sh&quot;

if $check_status; then
   export check_command=&quot;cat /root/chef_update/report.txt &amp;&amp; free -ml &amp;&amp; /opt/devops/bin/wait_for.sh &apos;service mdm status&apos; 900 &amp;&amp; service mdm status&quot;
fi

# Keep machine time in sync
ssh -i $ssh_key_file -p $ssh_port -o StrictHostKeyChecking=no root@$ssh_server_ip &quot;ntpdate pool.ntp.org || true&quot;

# remove old code folder: the specify branch may have been deleted and a tag with the same name might be created.
ssh -i $ssh_key_file -p $ssh_port -o StrictHostKeyChecking=no root@$ssh_server_ip &quot;rm -rf /root/chef/$app_branch_name&quot;

bash -ex /var/lib/jenkins/code/scripts/deploy_allinone.sh</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <jenkins.plugins.slack.SlackNotifier plugin="slack@2.1">
      <teamDomain>totvslabs</teamDomain>
      <authToken></authToken>
      <authTokenCredentialId>totvslabs_slack_token</authTokenCredentialId>
      <room>#carol-explore</room>
      <startNotification>true</startNotification>
      <notifySuccess>true</notifySuccess>
      <notifyAborted>true</notifyAborted>
      <notifyNotBuilt>true</notifyNotBuilt>
      <notifyUnstable>true</notifyUnstable>
      <notifyFailure>true</notifyFailure>
      <notifyBackToNormal>true</notifyBackToNormal>
      <notifyRepeatedFailure>true</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <commitInfoChoice>NONE</commitInfoChoice>
      <includeCustomMessage>false</includeCustomMessage>
      <customMessage></customMessage>
    </jenkins.plugins.slack.SlackNotifier>
  </publishers>
  <buildWrappers/>
</project>
